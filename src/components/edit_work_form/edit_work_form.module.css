@value smallCardBorderRadius from '../../common/sizes.css';
@value worksCardMinHeight, workContentPadding from '../../common/sizes.css';
@value formPadding from '../../common/sizes.css';
@value fieldPadding, fieldGap from '../../common/sizes.css';
@value inputPadding, inputOutline, inputBorderRadius from '../../common/sizes.css';
@value labelMediumFontSize from '../../common/sizes.css';
@value contentAndActionsMargin from '../../common/sizes.css';
@value headlineMediumFontSize, bodyLargeFontSize from '../../common/sizes.css';
@value actionsPositionBottom, actionsPositionRight from '../../common/sizes.css';

.container {
  position: relative;
  width: 100%;
  height: 100%;
  padding: formPadding;
  border-radius: smallCardBorderRadius;
  min-height: worksCardMinHeight;
  background-color: var(--color-surface-variant);
  color: var(--color-on-surface-variant);
}

.content {
  display: flex;
  height: 100%;
  padding: workContentPadding;
  flex-direction: column;
  gap: fieldPadding;
}

.field {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: fieldGap;
  padding: fieldPadding;
  font-size: labelMediumFontSize;
  font-weight: bold;
}

.input,
.textarea {
  width: 100%;
  outline: var(--color-outline) solid inputOutline;
  border-radius: inputBorderRadius;
  padding: inputPadding;
  font-size: labelMediumFontSize;
  color: var(--color-on-surface);
}

.textarea {
  height: 100%;
}

.input:not(:placeholder-shown).invalid {
  outline-color: var(--color-error);
}

.input:focus,
.textarea:focus {
  outline-color: var(--color-primary);
}

.actions {
  position: absolute;
  bottom: actionsPositionBottom;
  right: actionsPositionRight;
}

.title {
  width: 40%;
}

.repo {
  display: flex;
  gap: fieldGap;
}

.url {
  width: 60%;
}

.branch {
  width: 40%;
}

.description {
  height: 60%;
}

.actions {
  position: absolute;
  bottom: actionsPositionBottom;
  right: actionsPositionRight;
  display: flex;
  list-style: none;
}
